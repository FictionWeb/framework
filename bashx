#!/bin/bash

if [ -f "$1" ]; then 
  render=$(grep -o 'render.*' "$1")
  if [[ "$render" ]]; then
    funcname="${render//render}"
    isfunc=true
    input="$(sed -n "/^[[:space:]]*\\(function[[:space:]]\\+\\)\\?${funcname# }[[:space:]]*\\(()\\)\\?[[:space:]]*{/,\$s/^[[:space:]]*//p" "$1")"
  else  
    input=$(cat "$1")
  fi 
else 
:
fi
echo "input: $input"
if [ -n "$input" ]; then 
input=$(echo "${input//\\n}" | sed 's|\([a-Z]\)>|\1>\n|g; s|\(</[^>]*>\)|\n\1|')
level=0 flevel=0
while read -r line; do 
  [[ "$line" == '' ]] && continue
  set -- $line
  if [[ "${line::1}" == '<' ]]; then 
    [[ "${line::2}" == '</' ]] && ((level--)) || ((level++))
    if echo "$line" | grep -qE '^[[:space:]]*<([A-Z][a-zA-Z0-9]*)\b'; then
      line="${line//\>}"
      echo "${line//\>}"
    else
      echo "echo \"${line//\"/\\\"}\""
    fi 
  else 
    if ((level == 0)); then 
      [[ "$isfunc" ]] && { if [[ "$(echo "$line" | sed -n '/^[[:space:]]*\(function[[:space:]]\+\)\?[a-zA-Z_][a-zA-Z0-9_]*[[:space:]]*\(()\)\?[[:space:]]*{[[:space:]]*$/p')" ]]; then 
        ((flevel++)); echo "$line";
      elif [[ "$line" == '}' ]]; then 
        ((flevel--)); echo "$line"; ((flevel == 0)) && break
      fi; }
      echo "$line"
    else 
      echo "${line//\"/\\\"}"
    fi 
  fi
done <<< "${input:=/dev/stdin}"
else 
while read -r line; do 
  [ -z "$line" ] && continue
  #line=$(echo "$line" | sed 's|\([a-Z]\)>|\1>\n|g; s|\(</[^>]*>\)|\n\1|g')
  set -- $line
  echo "component: $line"
  if [[ "${line::1}" == '<' ]]; then 
    if echo "$line" | grep -qE '^[[:space:]]*<([A-Z][a-zA-Z0-9]*)\b'; then
      echo "$line: custom component"
    else
      echo "$line: HTML tag"
    fi
  elif which $1 &>/dev/null; then 
    echo "$line: command"
  else 
    echo "$line: string"
  fi 
done
fi
